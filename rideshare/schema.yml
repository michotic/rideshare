openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/profile/:
    get:
      operationId: profile_list
      tags:
      - profile
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
          description: ''
    post:
      operationId: profile_create
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/profile/{username}/:
    get:
      operationId: profile_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
        description: A unique value identifying this profile.
        required: true
      tags:
      - profile
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: profile_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
        description: A unique value identifying this profile.
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: profile_partial_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
        description: A unique value identifying this profile.
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    delete:
      operationId: profile_destroy
      parameters:
      - in: path
        name: username
        schema:
          type: string
        description: A unique value identifying this profile.
        required: true
      tags:
      - profile
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/rideposting/:
    get:
      operationId: rideposting_list
      tags:
      - rideposting
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RidePosting'
          description: ''
    post:
      operationId: rideposting_create
      tags:
      - rideposting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RidePosting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RidePosting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RidePosting'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RidePosting'
          description: ''
  /api/rideposting/{order_id}/:
    get:
      operationId: rideposting_retrieve
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        description: A unique value identifying this ride posting.
        required: true
      tags:
      - rideposting
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RidePosting'
          description: ''
    put:
      operationId: rideposting_update
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        description: A unique value identifying this ride posting.
        required: true
      tags:
      - rideposting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RidePosting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RidePosting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RidePosting'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RidePosting'
          description: ''
    patch:
      operationId: rideposting_partial_update
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        description: A unique value identifying this ride posting.
        required: true
      tags:
      - rideposting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRidePosting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRidePosting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRidePosting'
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RidePosting'
          description: ''
    delete:
      operationId: rideposting_destroy
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        description: A unique value identifying this ride posting.
        required: true
      tags:
      - rideposting
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/schema.yml:
    get:
      operationId: schema.yml_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema.yml
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    PatchedProfile:
      type: object
      properties:
        username:
          type: string
          maxLength: 50
        password:
          type: string
          maxLength: 250
        email:
          type: string
          format: email
          maxLength: 254
        bio:
          type: string
        profileimg:
          type: string
          format: uri
        location:
          type: string
          maxLength: 100
    PatchedRidePosting:
      type: object
      properties:
        order_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        point_a:
          type: string
          maxLength: 150
        point_b:
          type: string
          maxLength: 150
        is_offer:
          type: boolean
        seats:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        bags:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        creator:
          type: string
          maxLength: 50
        date:
          type: string
          format: date
    Profile:
      type: object
      properties:
        username:
          type: string
          maxLength: 50
        password:
          type: string
          maxLength: 250
        email:
          type: string
          format: email
          maxLength: 254
        bio:
          type: string
        profileimg:
          type: string
          format: uri
        location:
          type: string
          maxLength: 100
      required:
      - email
      - password
      - username
    RidePosting:
      type: object
      properties:
        order_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        point_a:
          type: string
          maxLength: 150
        point_b:
          type: string
          maxLength: 150
        is_offer:
          type: boolean
        seats:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        bags:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        creator:
          type: string
          maxLength: 50
        date:
          type: string
          format: date
      required:
      - bags
      - creator
      - is_offer
      - order_id
      - point_a
      - point_b
      - seats
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
